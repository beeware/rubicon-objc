[tox]
envlist = towncrier-check,pre-commit,docs{,-lint,-all},py{39,310,311,312,313,314}
skip_missing_interpreters = true

[testenv:pre-commit]
package = wheel
wheel_build_env = .pkg
extras = dev
commands = pre-commit run --all-files --show-diff-on-failure --color=always

[testenv:py{,39,310,311,312,313,314}]
package = wheel
wheel_build_env = .pkg
depends = pre-commit
extras = dev
allowlist_externals =
    make
commands =
    make -C tests{/}objc
    python -m pytest {posargs:-vv --color yes}

[testenv:towncrier{,-check}]
deps =
    towncrier==24.8.0
commands =
    check  : python -m towncrier.check --compare-with origin/main
    !check : python -m towncrier {posargs}

[docs]
docs_dir = {tox_root}{/}docs
build_dir = {[docs]docs_dir}{/}_build
sphinx_args = --show-traceback --fail-on-warning --keep-going --jobs auto

[testenv:docs{,-lint,-all,-live,-live-src}]
# Docs are always built on Python 3.12. See also the RTD config and contribution docs.
base_python = py312
# give sphinx-autobuild time to shutdown http server
suicide_timeout = 1
package = wheel
wheel_build_env = .pkg
deps =
    # Docs requirements are *mostly* handled by the `docs` extra; but we can't include
    # the theme that way, so the theme is installed using a requirements.txt file,
    # independent of the docs extra. Ideally, we'd use dependency groups for docs
    # dependencies, but RTD doesn't support them yet.
    -r {tox_root}/requirements-docs.txt
extras = docs
passenv =
    # On macOS M1, you need to manually set the location of the PyEnchant
    # library:
    #     export PYENCHANT_LIBRARY_PATH=/opt/homebrew/lib/libenchant-2.2.dylib
    PYENCHANT_LIBRARY_PATH
commands =
    !lint-!all-!live : python -m sphinx {[docs]sphinx_args} {posargs} --builder html {[docs]docs_dir} {[docs]build_dir}{/}html
    lint : python -m sphinx {[docs]sphinx_args} {posargs} --builder spelling {[docs]docs_dir} {[docs]build_dir}{/}spell
    lint : python -m sphinx {[docs]sphinx_args} {posargs} --builder linkcheck {[docs]docs_dir} {[docs]build_dir}{/}links
    all  : python -m sphinx {[docs]sphinx_args} {posargs} --verbose --write-all --fresh-env --builder html {[docs]docs_dir} {[docs]build_dir}{/}html
    live-!src : sphinx-autobuild {[docs]sphinx_args} {posargs} --builder html {[docs]docs_dir} {[docs]build_dir}{/}live
    live-src  : sphinx-autobuild {[docs]sphinx_args} {posargs} --write-all --fresh-env --watch {tox_root}{/}src{/}rubicon{/}objc --builder html {[docs]docs_dir} {[docs]build_dir}{/}live
