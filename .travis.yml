branches:
  only:
    - master
matrix:
  include:
    # Note: The ordering of the environments is optimized so that the complete matrix runs as quickly as possible,
    # while also providing the first results as early as possible.
    # At the moment, build times for each environment are roughly as follows:
    # xcode6.4: 13 minutes
    # xcode7.3: 5 minutes
    # xcode8.3: 3 minutes
    # xcode9.2: 2 minutes
    # This data is based on the following build, which should be similar to most builds on the repo:
    # https://travis-ci.org/pybee/rubicon-objc/builds/348992202
    # Currently, Travis allows a maximum of two concurrent Mac builds per owner:
    # https://blog.travis-ci.com/2017-09-22-macos-update
    # With the following order, xcode6.4 will take up the first slot, and at the same time the three other
    # environments use the second slot in sequence. xcode9.2 will finish first and provide some early results - most
    # test failures happen in all environments and will be quickly reported this way.
    # Linux builds have a higher limit than Mac builds, so the Linux environment will run in parallel with the Mac
    # environments.

    # OSX 10.10 Yosemite
    - os: osx
      osx_image: xcode6.4
    # macOS 10.12 Sierra
    - os: osx
      osx_image: xcode9.2
    - os: osx
      osx_image: xcode8.3
    # OSX 10.11 El Capitan
    - os: osx
      osx_image: xcode7.3
    # Linux with GNUstep
    - os: linux
      addons:
        apt:
          packages:
            - gnustep
    # Linux for flake8 only
    - os: linux
      env:
        - FLAKE8_ONLY=1
language: generic
cache:
  directories:
    ~/.pyenv
env:
  global:
    - PY34="3.4.8"
    - PY35="3.5.5"
    - PY36="3.6.4"
install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]
    then
      # The different Travis environments have different pyenv versions, and not all have the Python versions we need,
      # so we upgrade pyenv to get a consistent setup in all environments.
      brew update
      brew outdated pyenv || brew upgrade pyenv
    else
      pushd "$(pyenv root)"
      git fetch
      git checkout master
      popd
    fi
  # The existing pyenv shims from the build cache may no longer be valid, for example if pyenv was upgraded
  # (in which case the paths used in the shims point to an older, no longer installed pyenv version).
  # By rehashing the shims we can be sure that they are always valid again.
  - pyenv rehash
  # pyenv's shims directory is not in the PATH by default.
  - export PATH="$(pyenv root)/shims:${PATH}"
  # These are the Python versions that we want to test on.
  - pyenv install --skip-existing ${PY34}
  - pyenv install --skip-existing ${PY35}
  - pyenv install --skip-existing ${PY36}
  - pyenv global ${PY36} ${PY35} ${PY34} system
  # tox is not installed by default in some older Travis environments.
  - python3.6 -m pip install tox
script:
  - |
    if [[ "${FLAKE8_ONLY}" == "1" ]]
    then
      python3.6 -m tox -e "flake8"
    else
      make -f Makefile
      DYLD_LIBRARY_PATH="$(pwd)/tests/objc" python3.6 -m tox -e "py{34,35,36}-default"
    fi
